<controls:MetroWindow x:Class="MiniCast.Client.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:local="clr-namespace:MiniCast.Client"
        xmlns:views="clr-namespace:MiniCast.Client.Views"
        xmlns:viewModel="clr-namespace:MiniCast.Client.ViewModel"
        xmlns:viewModelChromecast="clr-namespace:MiniCast.Client.ViewModel.Chromecast"
        xmlns:viewModelHue="clr-namespace:MiniCast.Client.ViewModel.Hue"
        xmlns:core="clr-namespace:MiniCast.Client.Core"
        xmlns:audiocontrols="clr-namespace:SpectrumAnalyzer.Controls"
        Closed="MetroWindow_Closed"
        mc:Ignorable="d"
        Title="MiniCast" Height="450" Width="800">
    <controls:MetroWindow.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </controls:MetroWindow.Resources>
    <Grid DataContext="{Binding Main, Source={StaticResource Locator}}">
        <Grid.Resources>

            <core:SelectedItemToContentConverter x:Key="SelectedItemToContentConverter" />

            <!--  this is the template for the items (options too)  -->
            <DataTemplate x:Key="MenuItemTemplate" DataType="{x:Type controls:HamburgerMenuIconItem}">
                <Grid x:Name="RootGrid"
                      Height="48"
                      Background="Transparent">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="48" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <ContentControl Grid.Column="0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Content="{Binding Icon}"
                                    Focusable="False" />
                    <TextBlock Grid.Column="1"
                               VerticalAlignment="Center"
                               FontSize="16"
                               Text="{Binding Label}" />
                </Grid>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:HamburgerMenu}}, Path=IsPaneOpen}" Value="False">
                        <Setter TargetName="RootGrid" Property="ToolTip" Value="{Binding ToolTip, Mode=OneWay}" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <!--  these are the templates for the view models  -->
            <DataTemplate DataType="{x:Type viewModel:MusicColorViewModel}">
                <views:MusicColorView DataContext="{Binding}" />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModelChromecast:ChromecastViewModel}">
                <views:ChromecastView DataContext="{Binding}" />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModel:SettingsViewModel}">
                <views:SettingsView DataContext="{Binding}" />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModelHue:HueViewModel}">
                <views:HueView DataContext="{Binding}" />
            </DataTemplate>

        </Grid.Resources>

        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="200"/>
        </Grid.ColumnDefinitions>

        <controls:HamburgerMenu x:Name="HamburgerMenuControl"
                           DisplayMode="CompactInline"
                           IsPaneOpen="False"
                           ItemTemplate="{StaticResource MenuItemTemplate}"
                           ItemsSource="{Binding MenuItems}"
                           OptionsItemTemplate="{StaticResource MenuItemTemplate}"
                           OptionsItemsSource="{Binding MenuOptionItems}"
                           SelectedIndex="0">

            <!--  select the tag (ViewModel) of the selected item (options item)  -->
            <controls:HamburgerMenu.Content>
                <MultiBinding Converter="{StaticResource SelectedItemToContentConverter}">
                    <Binding FallbackValue="{x:Null}"
                             Mode="OneWay"
                             Path="SelectedItem.Tag"
                             RelativeSource="{RelativeSource Self}" />
                    <Binding FallbackValue="{x:Null}"
                             Mode="OneWay"
                             Path="SelectedOptionsItem.Tag"
                             RelativeSource="{RelativeSource Self}" />
                </MultiBinding>
            </controls:HamburgerMenu.Content>

        </controls:HamburgerMenu>

        <Grid Grid.Column="1">
            <Grid.Background>
                <SolidColorBrush Color="{StaticResource Gray8}"/>
            </Grid.Background>

            <views:ChromecastActionsView HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="10"/>
        </Grid>

        <audiocontrols:AudioSpectrum Grid.ColumnSpan="2" VerticalAlignment="Bottom" Height="256" IsHitTestVisible="False"
                                     Opacity=".5" ForegroundPitched="AliceBlue" PitchColor="True"
                                     RenderTransformOrigin="0.5,0.5" Visibility="{Binding SelectedItem.Tag.HasGlobalSpectrum, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=HamburgerMenuControl}">
            <audiocontrols:AudioSpectrum.RenderTransform>
                <ScaleTransform ScaleX="-1" />
            </audiocontrols:AudioSpectrum.RenderTransform>
        </audiocontrols:AudioSpectrum>
    </Grid>
</controls:MetroWindow>
